# coding=utf-8# 函数调用from random import choice, randintfrom operator import add, subfrom urllib import urlretrieveops = {'+': 'add', '-': 'sub'}MAX_TRIES = 2# Num1 简单算术运算def doProb():    """简单算术运算+-"""    op = choice('+-')    nums = [randint(1, 10) for i in range(2)]    nums.sort(reverse=True)    if op == '+':        ans = apply(add, (nums[0], nums[1]))    elif op == '-':        ans = apply(sub, (nums[0], nums[1]))    pr = '%d %s %d = ' % (nums[0], op, nums[1])    oops = 0    while True:        try:            if int(raw_input(pr)) == ans:                print 'correct'                break            if oops == MAX_TRIES:                print 'The Right Answer is : \n%s%d' % (pr, ans)            else:                print '...Try again'            oops += 1        except(KeyboardInterrupt, EOFError, ValueError):            print 'Invalid input... Try again'    print ans# Num2 将页面抓取后，显示html文件的第一个以及最后一个非空空格def first_non_blank(lines):    for eachLine in lines:        if not eachLine.strip():            continue        else:            return eachLinedef first_last(webPage):    f = open(webPage)    lines = f.readlines()    f.close()    print first_non_blank(lines)    lines.reverse()    print first_non_blank(lines)def download(url='https://www.baidu.com', process=first_last):    try:        retval = urlretrieve(url)[0]  # 直接将远程数据下载到本地    except IOError:        retval = None    if retval:        process(retval)def main():    num = int(raw_input('1?2'))    if num == 1:        while True:            doProb()            try:                opt = raw_input('Again?[y]').lower()                if opt and opt[0] == 'n':                    break            except(KeyboardInterrupt, EOFError):                break    elif num == 2:        download()if __name__ == '__main__':    main()